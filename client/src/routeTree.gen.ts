/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatRouteRouteImport } from './routes/chat/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as ChatServerIdRouteRouteImport } from './routes/chat/$serverId/route'
import { Route as ChatServerIdIndexRouteImport } from './routes/chat/$serverId/index'

const ChatRouteRoute = ChatRouteRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRouteRoute,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authRouteRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)
const ChatServerIdRouteRoute = ChatServerIdRouteRouteImport.update({
  id: '/$serverId',
  path: '/$serverId',
  getParentRoute: () => ChatRouteRoute,
} as any)
const ChatServerIdIndexRoute = ChatServerIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatServerIdRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof authRouteRouteWithChildren
  '/chat': typeof ChatRouteRouteWithChildren
  '/chat/$serverId': typeof ChatServerIdRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/chat/': typeof ChatIndexRoute
  '/chat/$serverId/': typeof ChatServerIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof authRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/chat': typeof ChatIndexRoute
  '/chat/$serverId': typeof ChatServerIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/chat': typeof ChatRouteRouteWithChildren
  '/chat/$serverId': typeof ChatServerIdRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/chat/': typeof ChatIndexRoute
  '/chat/$serverId/': typeof ChatServerIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/chat/$serverId'
    | '/login'
    | '/signup'
    | '/chat/'
    | '/chat/$serverId/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/signup' | '/chat' | '/chat/$serverId'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/chat'
    | '/chat/$serverId'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/chat/'
    | '/chat/$serverId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  ChatRouteRoute: typeof ChatRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof ChatRouteRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/chat/$serverId': {
      id: '/chat/$serverId'
      path: '/$serverId'
      fullPath: '/chat/$serverId'
      preLoaderRoute: typeof ChatServerIdRouteRouteImport
      parentRoute: typeof ChatRouteRoute
    }
    '/chat/$serverId/': {
      id: '/chat/$serverId/'
      path: '/'
      fullPath: '/chat/$serverId/'
      preLoaderRoute: typeof ChatServerIdIndexRouteImport
      parentRoute: typeof ChatServerIdRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface ChatServerIdRouteRouteChildren {
  ChatServerIdIndexRoute: typeof ChatServerIdIndexRoute
}

const ChatServerIdRouteRouteChildren: ChatServerIdRouteRouteChildren = {
  ChatServerIdIndexRoute: ChatServerIdIndexRoute,
}

const ChatServerIdRouteRouteWithChildren =
  ChatServerIdRouteRoute._addFileChildren(ChatServerIdRouteRouteChildren)

interface ChatRouteRouteChildren {
  ChatServerIdRouteRoute: typeof ChatServerIdRouteRouteWithChildren
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteRouteChildren: ChatRouteRouteChildren = {
  ChatServerIdRouteRoute: ChatServerIdRouteRouteWithChildren,
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteRouteWithChildren = ChatRouteRoute._addFileChildren(
  ChatRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  ChatRouteRoute: ChatRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
