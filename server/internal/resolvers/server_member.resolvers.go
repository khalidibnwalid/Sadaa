package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/khalidibnwalid/sadaa/server/internal/graph"
	"github.com/khalidibnwalid/sadaa/server/internal/models"
)

// JoinServer is the resolver for the joinServer field.
func (r *mutationResolver) JoinServer(ctx context.Context, serverID uuid.UUID) (*models.ServerMember, error) {
	panic(fmt.Errorf("not implemented: JoinServer - joinServer"))
}

// ServerMemberships is the resolver for the serverMemberships field.
func (r *queryResolver) ServerMemberships(ctx context.Context) ([]*models.ServerMember, error) {
	panic(fmt.Errorf("not implemented: ServerMemberships - serverMemberships"))
}

// ServerMembership is the resolver for the serverMembership field.
func (r *queryResolver) ServerMembership(ctx context.Context, serverID uuid.UUID) (*models.ServerMember, error) {
	panic(fmt.Errorf("not implemented: ServerMembership - serverMembership"))
}

// CreatedAt is the resolver for the createdAt field.
func (r *serverMemberResolver) CreatedAt(ctx context.Context, obj *models.ServerMember) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *serverMemberResolver) UpdatedAt(ctx context.Context, obj *models.ServerMember) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}

// ServerMember returns graph.ServerMemberResolver implementation.
func (r *Resolver) ServerMember() graph.ServerMemberResolver { return &serverMemberResolver{r} }

type serverMemberResolver struct{ *Resolver }
