package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/khalidibnwalid/sadaa/server/internal/db"
	"github.com/khalidibnwalid/sadaa/server/internal/graph"
	graph_models "github.com/khalidibnwalid/sadaa/server/internal/graph/models"
)

// Signup is the resolver for the signup field.
func (r *mutationResolver) Signup(ctx context.Context, input graph_models.SignupInput) (*db.User, error) {
	panic(fmt.Errorf("not implemented: Signup - signup"))
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input graph_models.LoginInput) (*db.User, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// GetUser is the resolver for the getUser field.
func (r *queryResolver) GetUser(ctx context.Context, id uuid.UUID) (*db.User, error) {
	panic(fmt.Errorf("not implemented: GetUser - getUser"))
}

// AvatarURL is the resolver for the avatarUrl field.
func (r *userResolver) AvatarURL(ctx context.Context, obj *db.User) (*string, error) {
	panic(fmt.Errorf("not implemented: AvatarURL - avatarUrl"))
}

// CreatedAt is the resolver for the createdAt field.
func (r *userResolver) CreatedAt(ctx context.Context, obj *db.User) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *userResolver) UpdatedAt(ctx context.Context, obj *db.User) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

// User returns graph.UserResolver implementation.
func (r *Resolver) User() graph.UserResolver { return &userResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
