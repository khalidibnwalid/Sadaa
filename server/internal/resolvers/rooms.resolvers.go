package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/khalidibnwalid/sadaa/server/internal/graph"
	graph_models "github.com/khalidibnwalid/sadaa/server/internal/graph/models"
	"github.com/khalidibnwalid/sadaa/server/internal/models"
)

// CreateRoom is the resolver for the createRoom field.
func (r *mutationResolver) CreateRoom(ctx context.Context, input graph_models.CreateRoomInput) (*models.Room, error) {
	panic(fmt.Errorf("not implemented: CreateRoom - createRoom"))
}

// UpdateRoom is the resolver for the updateRoom field.
func (r *mutationResolver) UpdateRoom(ctx context.Context, id uuid.UUID, input graph_models.UpdateRoomInput) (*models.Room, error) {
	panic(fmt.Errorf("not implemented: UpdateRoom - updateRoom"))
}

// GroupID is the resolver for the groupId field.
func (r *roomResolver) GroupID(ctx context.Context, obj *models.Room) (uuid.UUID, error) {
	panic(fmt.Errorf("not implemented: GroupID - groupId"))
}

// CreatedAt is the resolver for the createdAt field.
func (r *roomResolver) CreatedAt(ctx context.Context, obj *models.Room) (*time.Time, error) {
	return &obj.CreatedAt.Time, nil
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *roomResolver) UpdatedAt(ctx context.Context, obj *models.Room) (*time.Time, error) {
	return &obj.UpdatedAt.Time, nil
}

// Room returns graph.RoomResolver implementation.
func (r *Resolver) Room() graph.RoomResolver { return &roomResolver{r} }

type roomResolver struct{ *Resolver }
