package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/khalidibnwalid/sadaa/server/internal/db"
	"github.com/khalidibnwalid/sadaa/server/internal/graph"
	graph_models "github.com/khalidibnwalid/sadaa/server/internal/graph/models"
)

// CreateServer is the resolver for the createServer field.
func (r *mutationResolver) CreateServer(ctx context.Context, input graph_models.CreateServerInput) (*db.Server, error) {
	panic(fmt.Errorf("not implemented: CreateServer - createServer"))
}

// GetServerInfo is the resolver for the getServerInfo field.
func (r *queryResolver) GetServerInfo(ctx context.Context, id uuid.UUID) (*db.Server, error) {
	panic(fmt.Errorf("not implemented: GetServerInfo - getServerInfo"))
}

// CreatedAt is the resolver for the createdAt field.
func (r *serverResolver) CreatedAt(ctx context.Context, obj *db.Server) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *serverResolver) UpdatedAt(ctx context.Context, obj *db.Server) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}

// Server returns graph.ServerResolver implementation.
func (r *Resolver) Server() graph.ServerResolver { return &serverResolver{r} }

type serverResolver struct{ *Resolver }
